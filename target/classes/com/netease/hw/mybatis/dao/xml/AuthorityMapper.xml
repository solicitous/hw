<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.yscredit.pgp.mybatis.dao.AuthorityDao" >
    <sql id="Base_Column_List" >
        user_name, real_name, password, api_key, user_type, certificate_type, certificate_no,
        email, phone, address, profession, trade, contacts, parent, status, add_time, visit_type,
        company, query_day_limit, last_login_time, last_login_ip, father, month_limit, level,
        invite_code, regist_from, user_class, company_registr_number, legal_person, company_phone,
        company_address, job_title, person_verify_pic, person_verify_status, company_verify_pic,
        company_verify_status, law_num, is_formal, valid_time, password_level, weixin_openid,
        weixin_unionid, headerPhoto, hostCity, nickName, remark, sex, userName, weixinId,
        email_verify_status, service_code, recommend_code
  </sql>

    <select id="isSA" parameterType="String" resultType="com.yscredit.pgp.mybatis.model.User">
        select * from user where user_name = #{_parameter} and user_type='SA' and status='A'
    </select>

    <select id="getFatherAuth" resultType="java.util.Map">
        SELECT
            e.id id,
            e.edition_name editionName,
            GROUP_CONCAT(a.api_name) namelist
        FROM
            product_edition e
        LEFT JOIN product_edition_api p ON e.id = p.product_edition_id
        INNER JOIN api a ON p.api = a.id
        GROUP BY
        e.id
    </select>

    <select id="getSonAuth" parameterType="java.lang.String" resultType="java.util.Map">
        SELECT
            p.product_edition_id id,
            e.edition_name editionName,
            GROUP_CONCAT(DISTINCT(a.api_name)) namelist
        FROM
            USER u
        INNER JOIN user_balance_pro p ON p.uid = u.user_name
        INNER JOIN api a ON p.api = a.id
        INNER JOIN product_edition e ON e.id = p.product_edition_id
        WHERE
            visit_type = 'W'
        AND (father = '' OR father IS NULL)
        AND company = #{_parameter}
        GROUP BY
        p.product_edition_id
    </select>

    <select id="findUserNameByFatherCompany" parameterType="java.lang.String" resultType="java.lang.String">
        SELECT u.user_name userName FROM USER u  WHERE
            visit_type = 'W'
        AND (father = '' OR father IS NULL)
        AND company = #{_parameter}

    </select>
    <select id="getFatherCompany" resultType="java.lang.String">
        SELECT DISTINCT company FROM user WHERE (father IS NULL OR father = '') AND company != '' AND company IS NOT NULL
    </select>

    <select id="existUser" parameterType="java.lang.String" resultType="java.lang.Integer">
        SELECT COUNT(0) FROM user WHERE user_name = #{_parameter}
    </select>

    <select id="existCompanyFather" parameterType="java.lang.String" resultType="java.lang.Integer">
        SELECT COUNT(0) FROM user WHERE company = #{_parameter} AND (father = '' OR father = NULL)
    </select>

    <select id="existPhone" parameterType="java.lang.String" resultType="java.lang.Integer">
        SELECT COUNT(0) FROM user WHERE phone = #{_parameter}
    </select>

    <select id="findAuthByUserName" parameterType="java.lang.String" resultType="java.util.Map">
        SELECT
          p.product_edition_id id,
          e.edition_name editionName,
          GROUP_CONCAT(DISTINCT(a.api_name)) namelist
        FROM
          USER u
        INNER JOIN user_balance_pro p ON p.uid = u.user_name
        INNER JOIN api a ON p.api = a.id
        INNER JOIN product_edition e ON e.id = p.product_edition_id
        WHERE
          visit_type = 'W'
        AND user_name = #{_parameter}
        GROUP BY
          p.product_edition_id
    </select>
</mapper>